{"ast":null,"code":"var _jsxFileName = \"/Users/elliotkim/Documents/Code/nextjsdemo/pages/index.js\";\nvar __jsx = React.createElement;\n// instead of react router, to reach this file would be example.com/, which is based on the file name\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nclass IndexPage extends Component {\n  static async getInitialProps(context) {\n    console.log(context);\n    return {\n      appName: 'Super App'\n    }; // this code is executed on the server first\n    // it will only be executed on the child if you navigate there on the app\n    // you can use this to initialize your app before it loads\n    // so on the server for example, in getInitialProps. you can fetch data from a db and then prepopulate the props\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"The Main Page of \", this.props.appName), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Go to\", __jsx(Link, {\n      href: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Auth\"))), __jsx(\"button\", {\n      onClick: () => Router.push('/auth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Go To Auth\"));\n  }\n\n}\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/elliotkim/Documents/Code/nextjsdemo/pages/index.js"],"names":["React","Component","Link","Router","IndexPage","getInitialProps","context","console","log","appName","render","props","push"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChC,eAAaI,eAAb,CAA6BC,OAA7B,EAAsC;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAO;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAP,CAFoC,CAGpC;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKC,KAAL,CAAWF,OAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,CAFF,EAWE;AAAQ,MAAA,OAAO,EAAE,MAAMN,MAAM,CAACS,IAAP,CAAY,OAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CADF;AAeD;;AA1B+B;;AA6BlC,eAAeR,SAAf","sourcesContent":["// instead of react router, to reach this file would be example.com/, which is based on the file name\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nclass IndexPage extends Component {\n  static async getInitialProps(context) {\n    console.log(context);\n    return { appName: 'Super App' };\n    // this code is executed on the server first\n    // it will only be executed on the child if you navigate there on the app\n    // you can use this to initialize your app before it loads\n    // so on the server for example, in getInitialProps. you can fetch data from a db and then prepopulate the props\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>The Main Page of {this.props.appName}</h1>\n        <p>\n          Go to\n          <Link href=\"/auth\">\n            <a>Auth</a>\n          </Link>\n          {/* behind the scenes nextjs will add the ref attribute to the anchor tag */}\n          {/* also captures any clicks on the anchor tag and handles that internally so that you dont reload the page */}\n        </p>\n\n        <button onClick={() => Router.push('/auth')}>Go To Auth</button>\n      </div>\n    );\n  }\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}